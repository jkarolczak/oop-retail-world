package retail;

import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.awt.Color;

/**
 * @author Jacek Karolczak
 */
public class GUI extends javax.swing.JFrame {
    private World world;
    /**
     * Creates new form UserInterface
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        welcomePanel = new javax.swing.JPanel(){
            @Override
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                ImageIcon img = new ImageIcon(getClass().getResource("/images/welcome.png"));
                g.drawImage(img.getImage(), 0, 0, this.getWidth(), this.getHeight(), null);
            }

        };
        masterPanel = new javax.swing.JPanel();
        startSimulation = new javax.swing.JButton();
        dashboardPanel = new javax.swing.JPanel();
        sickLabel = new javax.swing.JLabel();
        sickValue = new javax.swing.JLabel();
        maskOnLabel = new javax.swing.JLabel();
        maskOnValue = new javax.swing.JLabel();
        vaccinatedLabel = new javax.swing.JLabel();
        vaccinatedValue = new javax.swing.JLabel();
        clientsLabel = new javax.swing.JLabel();
        clientsValue = new javax.swing.JLabel();
        suppliersLabel = new javax.swing.JLabel();
        suppliersValue = new javax.swing.JLabel();
        lockdownLabel = new javax.swing.JLabel();
        lockdownValue = new javax.swing.JLabel();
        worldParameters = new javax.swing.JPanel();
        transmissionRateLabel = new javax.swing.JLabel();
        transmissionRateInput = new javax.swing.JSlider();
        transmissionRateValue = new javax.swing.JLabel();
        transmissionRateVaccinedLabel = new javax.swing.JLabel();
        transmissionRateVaccinedInput = new javax.swing.JSlider();
        transmissionRateVaccinedValue = new javax.swing.JLabel();
        transmissionRateMaskLabel = new javax.swing.JLabel();
        transmissionRateMaskInput = new javax.swing.JSlider();
        transmissionRateMaskValue = new javax.swing.JLabel();
        peopleMaskLabel = new javax.swing.JLabel();
        peopleMaskInput = new javax.swing.JSlider();
        peopleMaskValue = new javax.swing.JLabel();
        lockdownThresholdLabel = new javax.swing.JLabel();
        lockdownThresholdInput = new javax.swing.JSlider();
        lockdownThresholdValue = new javax.swing.JLabel();
        vaccinatedPeopleLabel = new javax.swing.JLabel();
        vaccinatedPeopleInput = new javax.swing.JSlider();
        vaccinatedPeopleValue = new javax.swing.JLabel();
        shopsBeforeRecoveryLabel = new javax.swing.JLabel();
        shopsBeforeRecoveryInput = new javax.swing.JTextField();
        changeWorldProperties = new javax.swing.JButton();
        createClient = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        clientIdInput = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        clientFirstNameInput = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        clientLastNameInput = new javax.swing.JTextField();
        cartCapacityLabel = new javax.swing.JLabel();
        clientCartCapacityInput = new javax.swing.JTextField();
        clientCreateMonit = new javax.swing.JLabel();
        clientCreate = new javax.swing.JButton();
        createSupplier = new javax.swing.JPanel();
        supplierComapnyNameLabel = new javax.swing.JLabel();
        supplierCompanyNameInput = new javax.swing.JTextField();
        supplierCarBrandLabel = new javax.swing.JLabel();
        supplierCarBrandInput = new javax.swing.JTextField();
        supplierTrunkCapacityLabel = new javax.swing.JLabel();
        supplierTrunkCapacityInput = new javax.swing.JTextField();
        createSupplierMonit = new javax.swing.JLabel();
        supplierCreate = new javax.swing.JButton();
        mapPanel = new javax.swing.JPanel(){
            @Override
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                ImageIcon img = new ImageIcon(getClass().getResource("/images/map.png"));
                g.drawImage(img.getImage(), 0, 0, this.getWidth(), this.getHeight(), null);
                g.setColor(Color.WHITE);
                for (int i = 0; i < 5 ; i++) {
                    g.fillRect(44 + 200 * i, 44, 12, 812);
                    g.fillRect(44, 44 + 200 * i, 812, 12);
                }
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scranton PA");
        setFont(new java.awt.Font("Lato", 0, 10)); // NOI18N
        getContentPane().setLayout(new java.awt.FlowLayout());

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        welcomePanel.setMaximumSize(new java.awt.Dimension(306, 204));
        welcomePanel.setPreferredSize(new java.awt.Dimension(306, 204));

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        mainPanel.add(welcomePanel);

        masterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Dashboard"));
        masterPanel.setLayout(new java.awt.BorderLayout(0, 10));

        startSimulation.setText("Run simulation");
        startSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSimulationActionPerformed(evt);
            }
        });
        masterPanel.add(startSimulation, java.awt.BorderLayout.PAGE_START);

        dashboardPanel.setLayout(new java.awt.GridLayout(6, 2, 30, 10));

        sickLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sickLabel.setText("Sick people:");
        dashboardPanel.add(sickLabel);

        sickValue.setText("0");
        dashboardPanel.add(sickValue);

        maskOnLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        maskOnLabel.setText("People with mask:");
        dashboardPanel.add(maskOnLabel);

        maskOnValue.setText("0");
        dashboardPanel.add(maskOnValue);

        vaccinatedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vaccinatedLabel.setText("Vaccinated people:");
        dashboardPanel.add(vaccinatedLabel);

        vaccinatedValue.setText("0");
        dashboardPanel.add(vaccinatedValue);

        clientsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clientsLabel.setText("Clients:");
        dashboardPanel.add(clientsLabel);

        clientsValue.setText("0");
        dashboardPanel.add(clientsValue);

        suppliersLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        suppliersLabel.setText("Suppliers:");
        dashboardPanel.add(suppliersLabel);

        suppliersValue.setText("0");
        dashboardPanel.add(suppliersValue);

        lockdownLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lockdownLabel.setText("Lockdown:");
        dashboardPanel.add(lockdownLabel);

        lockdownValue.setText("false");
        dashboardPanel.add(lockdownValue);

        masterPanel.add(dashboardPanel, java.awt.BorderLayout.CENTER);

        mainPanel.add(masterPanel);

        worldParameters.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Change world parameters"));
        worldParameters.setLayout(new java.awt.GridLayout(7, 3, 10, 0));

        transmissionRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        transmissionRateLabel.setLabelFor(transmissionRateInput);
        transmissionRateLabel.setText("Transmission rate");
        worldParameters.add(transmissionRateLabel);

        transmissionRateInput.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                transmissionRateInputStateChanged(evt);
            }
        });
        worldParameters.add(transmissionRateInput);
        worldParameters.add(transmissionRateValue);

        transmissionRateVaccinedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        transmissionRateVaccinedLabel.setLabelFor(transmissionRateVaccinedInput);
        transmissionRateVaccinedLabel.setText("Transmission rate (vaccinated)");
        worldParameters.add(transmissionRateVaccinedLabel);

        transmissionRateVaccinedInput.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                transmissionRateVaccinedInputStateChanged(evt);
            }
        });
        worldParameters.add(transmissionRateVaccinedInput);
        worldParameters.add(transmissionRateVaccinedValue);

        transmissionRateMaskLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        transmissionRateMaskLabel.setLabelFor(transmissionRateMaskInput);
        transmissionRateMaskLabel.setText("Transmission rate (mask on)");
        worldParameters.add(transmissionRateMaskLabel);

        transmissionRateMaskInput.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                transmissionRateMaskInputStateChanged(evt);
            }
        });
        worldParameters.add(transmissionRateMaskInput);
        worldParameters.add(transmissionRateMaskValue);

        peopleMaskLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        peopleMaskLabel.setLabelFor(peopleMaskInput);
        peopleMaskLabel.setText("People with mask");
        worldParameters.add(peopleMaskLabel);

        peopleMaskInput.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                peopleMaskInputStateChanged(evt);
            }
        });
        worldParameters.add(peopleMaskInput);
        worldParameters.add(peopleMaskValue);

        lockdownThresholdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lockdownThresholdLabel.setLabelFor(lockdownThresholdInput);
        lockdownThresholdLabel.setText("Lockdown threshold");
        worldParameters.add(lockdownThresholdLabel);

        lockdownThresholdInput.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lockdownThresholdInputStateChanged(evt);
            }
        });
        worldParameters.add(lockdownThresholdInput);
        worldParameters.add(lockdownThresholdValue);

        vaccinatedPeopleLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vaccinatedPeopleLabel.setLabelFor(vaccinatedPeopleInput);
        vaccinatedPeopleLabel.setText("Vaccinated people");
        worldParameters.add(vaccinatedPeopleLabel);

        vaccinatedPeopleInput.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                vaccinatedPeopleInputStateChanged(evt);
            }
        });
        worldParameters.add(vaccinatedPeopleInput);
        worldParameters.add(vaccinatedPeopleValue);

        shopsBeforeRecoveryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        shopsBeforeRecoveryLabel.setLabelFor(shopsBeforeRecoveryInput);
        shopsBeforeRecoveryLabel.setText("Shops before recovery:");
        worldParameters.add(shopsBeforeRecoveryLabel);
        worldParameters.add(shopsBeforeRecoveryInput);

        changeWorldProperties.setText("Apply changes");
        changeWorldProperties.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeWorldPropertiesMouseClicked(evt);
            }
        });
        worldParameters.add(changeWorldProperties);

        mainPanel.add(worldParameters);

        createClient.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Create client"));
        createClient.setFocusable(false);
        createClient.setLayout(new java.awt.GridLayout(5, 2, 20, 0));

        idLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idLabel.setLabelFor(clientIdInput);
        idLabel.setText("Identifier:");
        createClient.add(idLabel);

        clientIdInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clientIdInputFocusGained(evt);
            }
        });
        createClient.add(clientIdInput);

        firstNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstNameLabel.setLabelFor(clientFirstNameInput);
        firstNameLabel.setText("First name:");
        createClient.add(firstNameLabel);

        clientFirstNameInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clientFirstNameInputFocusGained(evt);
            }
        });
        createClient.add(clientFirstNameInput);

        lastNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lastNameLabel.setLabelFor(clientLastNameInput);
        lastNameLabel.setText("Last name:");
        createClient.add(lastNameLabel);

        clientLastNameInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clientLastNameInputFocusGained(evt);
            }
        });
        createClient.add(clientLastNameInput);

        cartCapacityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cartCapacityLabel.setLabelFor(clientCartCapacityInput);
        cartCapacityLabel.setText("Cart capacity:");
        createClient.add(cartCapacityLabel);

        clientCartCapacityInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clientCartCapacityInputFocusGained(evt);
            }
        });
        createClient.add(clientCartCapacityInput);

        clientCreateMonit.setForeground(new java.awt.Color(100, 100, 100));
        clientCreateMonit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createClient.add(clientCreateMonit);

        clientCreate.setText("Create");
        clientCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientCreateActionPerformed(evt);
            }
        });
        createClient.add(clientCreate);

        mainPanel.add(createClient);

        createSupplier.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Create supplier"));
        createSupplier.setLayout(new java.awt.GridLayout(4, 2, 20, 0));

        supplierComapnyNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        supplierComapnyNameLabel.setLabelFor(supplierCompanyNameInput);
        supplierComapnyNameLabel.setText("Company name:");
        createSupplier.add(supplierComapnyNameLabel);

        supplierCompanyNameInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                supplierCompanyNameInputFocusGained(evt);
            }
        });
        createSupplier.add(supplierCompanyNameInput);

        supplierCarBrandLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        supplierCarBrandLabel.setLabelFor(supplierCarBrandInput);
        supplierCarBrandLabel.setText("Car brand:");
        createSupplier.add(supplierCarBrandLabel);

        supplierCarBrandInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                supplierCarBrandInputFocusGained(evt);
            }
        });
        createSupplier.add(supplierCarBrandInput);

        supplierTrunkCapacityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        supplierTrunkCapacityLabel.setLabelFor(supplierTrunkCapacityInput);
        supplierTrunkCapacityLabel.setText("Trunk capacity:");
        createSupplier.add(supplierTrunkCapacityLabel);

        supplierTrunkCapacityInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                supplierTrunkCapacityInputFocusGained(evt);
            }
        });
        createSupplier.add(supplierTrunkCapacityInput);

        createSupplierMonit.setForeground(new java.awt.Color(100, 100, 100));
        createSupplierMonit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createSupplier.add(createSupplierMonit);

        supplierCreate.setText("Create");
        supplierCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierCreateActionPerformed(evt);
            }
        });
        createSupplier.add(supplierCreate);

        mainPanel.add(createSupplier);

        getContentPane().add(mainPanel);

        mapPanel.setMaximumSize(new java.awt.Dimension(900, 900));
        mapPanel.setPreferredSize(new java.awt.Dimension(900, 900));

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );

        getContentPane().add(mapPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public JPanel getMapPanel() {
        return mapPanel;
    }
    public JPanel getDashboardPanel() {
        return masterPanel;
    }
    public JLabel getMaskOnValue() {
        return maskOnValue;
    }
    public JLabel getSickValue() {
        return sickValue;
    }
    public JLabel getVaccinatedValue() {
        return vaccinatedValue;
    }
    public JLabel getClientsValue() {
        return clientsValue;
    }
    public JLabel getSuppliersValue() {
        return suppliersValue;
    }
    public JLabel getLockdownValue() {
        return lockdownValue;
    }  
    
    public void initDraw(World world){
        this.world = world;
        Integer value;
        
        value = (int)(100 * world.getTransmissionRate());
        this.transmissionRateInput.setValue(value);
        this.transmissionRateValue.setText(value.toString() + "%");
        
        value = (int)(100 * world.getVaccinedTransmissionRate());
        this.transmissionRateVaccinedInput.setValue(value);
        this.transmissionRateVaccinedValue.setText(value.toString() + "%");
        
        value = (int)(100 * world.getMaskTransmissionRate());
        this.transmissionRateMaskInput.setValue(value);
        this.transmissionRateMaskValue.setText(value.toString() + "%");
        
        value = (int)(100 * world.getPeopleWithMask());
        this.peopleMaskInput.setValue(value);
        this.peopleMaskValue.setText(value.toString() + "%");
        
        value = (int)(100 * world.getLockdownThreshold());
        this.lockdownThresholdInput.setValue(value);
        this.lockdownThresholdValue.setText(value.toString() + "%");
        
        value = (int)(100 * world.getVaccinedPeople());
        this.vaccinatedPeopleInput.setValue(value);
        this.vaccinatedPeopleValue.setText(value.toString() + "%");
        
        value = world.getVisitedStoreBeforeRecovery();
        this.shopsBeforeRecoveryInput.setText(value.toString());
    }
    
    private void transmissionRateInputStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_transmissionRateInputStateChanged
        Integer value = this.transmissionRateInput.getValue();
        this.transmissionRateValue.setText(value.toString() + "%");
    }//GEN-LAST:event_transmissionRateInputStateChanged

    private void transmissionRateVaccinedInputStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_transmissionRateVaccinedInputStateChanged
        Integer value = this.transmissionRateVaccinedInput.getValue();
        this.transmissionRateVaccinedValue.setText(value.toString() + "%");
    }//GEN-LAST:event_transmissionRateVaccinedInputStateChanged

    private void peopleMaskInputStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_peopleMaskInputStateChanged
        Integer value = this.peopleMaskInput.getValue();
        this.peopleMaskValue.setText(value.toString() + "%");
    }//GEN-LAST:event_peopleMaskInputStateChanged

    private void lockdownThresholdInputStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lockdownThresholdInputStateChanged
        Integer value = this.lockdownThresholdInput.getValue();
        this.lockdownThresholdValue.setText(value.toString() + "%");
    }//GEN-LAST:event_lockdownThresholdInputStateChanged

    private void vaccinatedPeopleInputStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_vaccinatedPeopleInputStateChanged
        Integer value = this.vaccinatedPeopleInput.getValue();
        this.vaccinatedPeopleValue.setText(value.toString() + "%");
    }//GEN-LAST:event_vaccinatedPeopleInputStateChanged

    private void changeWorldPropertiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeWorldPropertiesMouseClicked
        try {
            this.world.setTransmissionRate((float)this.transmissionRateInput.getValue() / (float)100.0);
            this.world.setVaccinedTransmissionRate((float)this.transmissionRateVaccinedInput.getValue() / (float)100);
            this.world.setMaskTransmissionRate((float)this.transmissionRateMaskInput.getValue() / (float)100);
            this.world.setPeopleWithMask((float)this.peopleMaskInput.getValue() / (float)100);
            this.world.setLockdownThreshold((float)this.lockdownThresholdInput.getValue() / (float)100);
            this.world.setVaccinedPeople((float)this.vaccinatedPeopleInput.getValue() / (float)100);
            this.world.setVisitedStoreBeforeRecovery(Integer.parseInt(this.shopsBeforeRecoveryInput.getText()));
            this.world.inoculateHumans();
            this.world.putMasksHumans();
        }catch(Exception e){
            this.shopsBeforeRecoveryInput.setText("This value must be integer");
        }
    }//GEN-LAST:event_changeWorldPropertiesMouseClicked

    private void clientCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientCreateActionPerformed
        try {
            String id = this.clientIdInput.getText();
            String firstName = this.clientFirstNameInput.getText();
            String lastName = this.clientLastNameInput.getText();
            int cartCapacity = Integer.parseInt(this.clientCartCapacityInput.getText()); 
            int x = this.world.getInitialX();
            int y = this.world.getInitialY();
            this.world.addClient(id, firstName, lastName, cartCapacity, x, y);

            this.clientIdInput.setText("");
            this.clientFirstNameInput.setText("");
            this.clientLastNameInput.setText("");
            this.clientCartCapacityInput.setText("");
            this.clientCreateMonit.setText("Client added successfully!");
        }catch(Exception e){
            this.clientCreateMonit.setText("Provide valid data!");
        }
        }//GEN-LAST:event_clientCreateActionPerformed

    private void clientIdInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clientIdInputFocusGained
        this.clientCreateMonit.setText("");
    }//GEN-LAST:event_clientIdInputFocusGained

    private void clientFirstNameInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clientFirstNameInputFocusGained
        this.clientCreateMonit.setText("");
    }//GEN-LAST:event_clientFirstNameInputFocusGained

    private void clientLastNameInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clientLastNameInputFocusGained
        this.clientCreateMonit.setText("");
    }//GEN-LAST:event_clientLastNameInputFocusGained

    private void clientCartCapacityInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clientCartCapacityInputFocusGained
        this.clientCreateMonit.setText("");
    }//GEN-LAST:event_clientCartCapacityInputFocusGained

    private void supplierCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierCreateActionPerformed
        try {
            String companyName = this.supplierCompanyNameInput.getText();
            String carBrand = this.supplierCarBrandInput.getText();
            int trunkCapacity = Integer.parseInt(this.supplierTrunkCapacityInput.getText());
            int x = this.world.getInitialX();
            int y = this.world.getInitialY();
            this.world.addSupplier(companyName, carBrand, trunkCapacity, x, y);
            this.supplierCompanyNameInput.setText("");
            this.supplierCarBrandInput.setText("");
            this.supplierTrunkCapacityInput.setText("");
            this.createSupplierMonit.setText("Supplier added successfully!");
        }catch(Exception e){
            this.createSupplierMonit.setText("Provide valid data!");
        }
    }//GEN-LAST:event_supplierCreateActionPerformed

    private void supplierCompanyNameInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_supplierCompanyNameInputFocusGained
        this.createSupplierMonit.setText("");
    }//GEN-LAST:event_supplierCompanyNameInputFocusGained

    private void supplierCarBrandInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_supplierCarBrandInputFocusGained
        this.createSupplierMonit.setText("");
    }//GEN-LAST:event_supplierCarBrandInputFocusGained

    private void supplierTrunkCapacityInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_supplierTrunkCapacityInputFocusGained
        this.createSupplierMonit.setText("");
    }//GEN-LAST:event_supplierTrunkCapacityInputFocusGained

    private void transmissionRateMaskInputStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_transmissionRateMaskInputStateChanged
        Integer value = this.transmissionRateMaskInput.getValue();
        this.transmissionRateMaskValue.setText(value.toString() + "%");
    }//GEN-LAST:event_transmissionRateMaskInputStateChanged

    private void startSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSimulationActionPerformed
        this.world.start();
        this.masterPanel.remove(this.startSimulation);
    }//GEN-LAST:event_startSimulationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cartCapacityLabel;
    private javax.swing.JButton changeWorldProperties;
    private javax.swing.JTextField clientCartCapacityInput;
    private javax.swing.JButton clientCreate;
    private javax.swing.JLabel clientCreateMonit;
    private javax.swing.JTextField clientFirstNameInput;
    private javax.swing.JTextField clientIdInput;
    private javax.swing.JTextField clientLastNameInput;
    private javax.swing.JLabel clientsLabel;
    private javax.swing.JLabel clientsValue;
    private javax.swing.JPanel createClient;
    private javax.swing.JPanel createSupplier;
    private javax.swing.JLabel createSupplierMonit;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel lockdownLabel;
    private javax.swing.JSlider lockdownThresholdInput;
    private javax.swing.JLabel lockdownThresholdLabel;
    private javax.swing.JLabel lockdownThresholdValue;
    private javax.swing.JLabel lockdownValue;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JLabel maskOnLabel;
    private javax.swing.JLabel maskOnValue;
    private javax.swing.JPanel masterPanel;
    private javax.swing.JSlider peopleMaskInput;
    private javax.swing.JLabel peopleMaskLabel;
    private javax.swing.JLabel peopleMaskValue;
    private javax.swing.JTextField shopsBeforeRecoveryInput;
    private javax.swing.JLabel shopsBeforeRecoveryLabel;
    private javax.swing.JLabel sickLabel;
    private javax.swing.JLabel sickValue;
    private javax.swing.JButton startSimulation;
    private javax.swing.JTextField supplierCarBrandInput;
    private javax.swing.JLabel supplierCarBrandLabel;
    private javax.swing.JLabel supplierComapnyNameLabel;
    private javax.swing.JTextField supplierCompanyNameInput;
    private javax.swing.JButton supplierCreate;
    private javax.swing.JTextField supplierTrunkCapacityInput;
    private javax.swing.JLabel supplierTrunkCapacityLabel;
    private javax.swing.JLabel suppliersLabel;
    private javax.swing.JLabel suppliersValue;
    private javax.swing.JSlider transmissionRateInput;
    private javax.swing.JLabel transmissionRateLabel;
    private javax.swing.JSlider transmissionRateMaskInput;
    private javax.swing.JLabel transmissionRateMaskLabel;
    private javax.swing.JLabel transmissionRateMaskValue;
    private javax.swing.JSlider transmissionRateVaccinedInput;
    private javax.swing.JLabel transmissionRateVaccinedLabel;
    private javax.swing.JLabel transmissionRateVaccinedValue;
    private javax.swing.JLabel transmissionRateValue;
    private javax.swing.JLabel vaccinatedLabel;
    private javax.swing.JSlider vaccinatedPeopleInput;
    private javax.swing.JLabel vaccinatedPeopleLabel;
    private javax.swing.JLabel vaccinatedPeopleValue;
    private javax.swing.JLabel vaccinatedValue;
    private javax.swing.JPanel welcomePanel;
    private javax.swing.JPanel worldParameters;
    // End of variables declaration//GEN-END:variables
}

